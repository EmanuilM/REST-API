{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/user.module.ts","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user/user.service.ts","./src/app/app.module.ts","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AASO,MAAM,cAAc;IAEzB,YAAoB,WAAyB,EAAW,MAAc;QAAlD,gBAAW,GAAX,WAAW,CAAc;QAAW,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE3E,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,QAAc;QACzB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;;4EAZU,cAAc;8FAAd,cAAc;;QCT3B,6EAAqD;QAAnC,sRAAY,2BAAqB,IAAC;QAChD,yEAAuB;QACnB,sEAAK;QACD,wEAAO;QAAA,mEAAQ;QAAA,4DAAQ;QACvB,yEAAoE;QACxE,4DAAM;QACN,sEAAK;QACD,wEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,0EAAwE;QAC5E,4DAAM;QAEN,0EAAQ;QAAA,iEAAK;QAAA,4DAAS;QAC1B,4DAAM;QAEN,wDACJ;;QAAA,4DAAO;;;QADH,2DACJ;QADI,wJACJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACmB;AACrB;AACW;AACC;;AAmBlD,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FAVZ;YACP,4DAAY;YACZ,0DAAW;YACX,qEAAgB;SACjB;mIAMU,UAAU,mBAbnB,8EAAiB;QACjB,qEAAc,aAGd,4DAAY;QACZ,0DAAW;QACX,qEAAgB,aAGhB,8EAAiB;;;;;;;;;;;;;ACnBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AAEpB;;;;;;;;;;;;;;ICY5C,6EAK2B;IAD3B,6VAAS,YAAe,IAAC;IAEzB,+EAA4C;IAAA,+DAAI;IAAA,4DAAW;IAC3D,4DAAS;;;ADZR,MAAM,gBAAgB;IAQ3B,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAN1D,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACnF,IAAI,CACH,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAC7B,kEAAW,EAAE,CACd,CAAC;IAEyD,CAAC;;gFARnD,gBAAgB;gGAAhB,gBAAgB;QCV7B,2FAAiD;QAC/C,oFAI8C;;;;;QAC5C,8EAAa;QAAA,+DAAI;QAAA,4DAAc;QAC/B,+EAAc;QACZ,wEAAwC;QAAA,oEAAQ;QAAA,4DAAI;QACpD,wEAAqC;QAAA,iEAAK;QAAA,4DAAI;QAC9C,wEAA0B;QAAA,kEAAM;QAAA,4DAAI;QACtC,4DAAe;QACjB,4DAAc;QACd,uFAAqB;QACnB,kFAA6B;QAC3B,oHAOS;;QACT,wEAAkB;QAAA,wEAAY;QAAA,4DAAI;QAClC,sEAA4C;QAC5C,yEAAkD;QAAA,oEAAQ;QAAA,4DAAI;QAC9D,yEAA+C;QAAA,iEAAK;QAAA,4DAAI;QAC1D,4DAAc;QAEhB,4DAAsB;QACxB,4DAAwB;;QA5BlB,0DAA4C;QAA5C,6NAA4C;QAC5C,6KAA6D;QAiB5D,2DAAwB;QAAxB,mJAAwB;;;;;;;;;;;;;;;;;;ACbxB,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;ACAlB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,0EAA6B;QAC7B,2EAA+B;;;;;;;;;;;;;;;;;;;;ACMxB,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,QAAQ,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,eAAe,EAAG,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,IAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,YAAY,EAAG,IAAI,EAAG,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9E,CAAC;;sEAVU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgC;AACd;AACd;AACU;AACF;AACE;AACN;AACA;AACC;AACR;AAEM;;AAyB/C,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FAFb,EACV,YAdQ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,gEAAY;YACZ,0EAAgB;YAChB,wEAAe;YACf,0EAAgB;YAChB,oEAAa;YACb,qEAAa;YACb,sEAAgB;YAChB,6DAAU;SACX;oIAKU,SAAS,mBArBlB,2DAAY;QACZ,6EAAgB;QAChB,mEAAa,aAGb,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,gEAAY;QACZ,0EAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,qEAAa;QACb,sEAAgB;QAChB,6DAAU;;;;;;;;;;;;;;;;;;;;;;;;;ACzBP,MAAM,iBAAiB;IAE5B,YAAoB,WAAyB,EAAW,MAAe;QAAnD,gBAAW,GAAX,WAAW,CAAc;QAAW,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAE5E,QAAQ;IACR,CAAC;IAED,eAAe,CAAC,QAAY;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAChD,IAAG,CAAC,CAAC,YAAY,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;aACjC;QACH,CAAC,CAAC;IAEJ,CAAC;;kFAfU,iBAAiB;iGAAjB,iBAAiB;;QCV9B,6EAA0E;QAAxD,yRAAY,8BAAwB,IAAC;QACnD,sEAAK;QACD,2EAAc;QAAA,mEAAQ;QAAA,4DAAQ;QAC9B,yEAA2F;QAE/F,4DAAM;QAEN,sEAAK;QACD,2EAAc;QAAA,mEAAQ;QAAA,4DAAQ;QAC9B,0EAAiF;QACrF,4DAAM;QAEN,uEAAK;QACD,4EAAc;QAAA,sEAAU;QAAA,4DAAQ;QAChC,0EAAqF;QACzF,4DAAM;QAEN,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAEzB,wDACJ;;QAAA,4DAAO;;;QADH,2DACJ;QADI,wJACJ;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;AACQ;AACS;;;AACvE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,mFAAiB;KAC7B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,0EAAc;KAC1B;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAG,MAAM;QAClB,SAAS,EAAG,kEAAa;KAC1B;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACvBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService : UserService , private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginHandler(formData : any) : void{\n    this.userService.login(formData).subscribe((x) => { \n      console.log(x);\n      this.router.navigate(['/']);\n    })\n  }\n\n}\n","<form #f=\"ngForm\" (ngSubmit)=\"loginHandler(f.value)\">\n    <div class=\"container\">\n        <div>\n            <label>Username</label>\n            <input #usernameInput=\"ngModel\" type=\"text\" name=\"username\" ngModel>\n        </div>\n        <div>\n            <label>Password</label>\n            <input #passwordInput=\"ngModel\" type=\"password\" name=\"password\" ngModel>\n        </div>\n\n        <button>Login</button>\n    </div>\n\n    {{f.value | json}}\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\n\n\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports : [\n    RegisterComponent,\n  ],\n \n})\nexport class UserModule { }\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [ngClass]=\"{hidden : !(isHandset$ | async)}\"\n      [attr.role]=\"!(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/register\">Register</a>\n      <a mat-list-item routerLink=\"/login\">Login</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n      type=\"button\"\n      aria-label=\"Toggle sidenav\"\n      mat-icon-button\n      (click)=\"drawer.toggle()\"\n      *ngIf=\"isHandset$ | async\">\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <a routerLink='/'>testMaterial</a>\n      <span class=\"spacer\" fxLayout fxHide></span>\n      <a fxShow fxHide.xs=\"true\" routerLink=\"/register\">Register</a>\n      <a fxShow fxHide.xs=\"true\" routerLink=\"/login\">Login</a>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testMaterial';\n}\n","<app-main-nav></app-main-nav>\r\n<router-outlet></router-outlet>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  register(data : any) : Observable<any> { \n    return this.http.post<any>('auth/register' , data);\n  }\n\n  login(data : any) : Observable<any> { \n    return this.http.post<any>('auth/login' , data , { withCredentials: true });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { UserModule } from './user/user.module';\nimport { UserService } from './user/user.service';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    FlexLayoutModule,\n    UserModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService : UserService , private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  registerHandler(formData:any) : void { \n    this.userService.register(formData).subscribe(x => { \n      if(x.isSuccessful) { \n        console.log('You have made your account');\n        this.router.navigate(['/login'])\n      }\n    })\n    \n  }\n\n}\n","<form #f=\"ngForm\" (ngSubmit)=\"registerHandler(f.value)\" id=\"registerForm\">\n    <div>\n        <label for=\"\">Username</label>\n        <input #inputUsername=\"ngModel\" type=\"text\" name=\"username\" id=\"username\" ngModel required>\n        \n    </div>\n\n    <div>\n        <label for=\"\">Password</label>\n        <input #inputPassword=\"ngModel\" type=\"password\" name=\"password\" ngModel required>\n    </div>\n\n    <div>\n        <label for=\"\">RePassword</label>\n        <input #inputRePassword=\"ngModel\" type=\"password\" name=\"RePassword\" ngModel required>\n    </div>\n\n    <button>Register</button>\n\n    {{f.value | json}}\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nconst routes: Routes = [\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '',\n    pathMatch : 'full',\n    component : HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}